#!/bin/bash

#################################################
#						#
#		NS-Toolkit			#
#						#
#	Author:  noobscode   			#
#	Mail: 					#
#						#
#	Date: 27.02.2016			#
#						#
#	https://www.github.com/noobscode		#
#################################################
source config_file

function header {
cat << "EOF"
#       _   _  _____   _______          _ _    _ _
#      | \ | |/ ____| |__   __|        | | |  (_) |
#      |  \| | (___      | | ___   ___ | | | ___| |_
#      | . ` |\___ \     | |/ _ \ / _ \| | |/ / | __|
#      | |\  |____) |    | | (_) | (_) | |   <| | |_
#      |_| \_|_____/     |_|\___/ \___/|_|_|\_\_|\__|
#
#               Welcome To NordSec Toolkit!
#
#     - This is a Really handy script to merge multiple
#       blacklists cross multiple servers for fail2ban or any other firewall.
#     - Its also possible to make a complete backup of Mysql.
#
#       Created by Alexander NordbÃ¸ on the 23.02.2016
#
#       https://github.com/nordsec/NS-Toolkit

EOF
}

function mainmen {
header
echo
  OPTIONS="Sync-Firewall Database-Backup Settings Update Help Quit"
select opt in $OPTIONS; do

        if [ "$opt" = "Database-Backup" ]; then
	mysqlbackup

	elif [ "$opt" = "Sync-Firewall" ]; then
	fsync

	elif [ "$opt" = "Settings" ]; then
	clear	
	submen

	elif [ "$opt" = "Update" ]; then
	kitupdate

	elif [ "$opt" = "Help" ]; then
	echo "Visit: https://github.com/nordsec/NS-Toolkit"
	cat README.md
	elif [ "$opt" = "Quit" ]; then
	exit
	else

	echo "Bad option"

fi
done
}

function submen {
	header	
	OPTIONS2="Edit-Config Back"
	select opt in $OPTIONS2; do
if [ "$opt" = "Edit-Config" ]; then
	nano config_file
fi
if [ "$opt" = "Back" ]; then
	mainmen
fi

done
}

function srvconfig {

conf="config_file"

if [ -f "$conf" ]; then
read -r -p "config_file exist, do you want to overwrite? (yes/no)" ans
fi

if [ "$ans" = "yes" ]; then
rm config_file
fi

echo "NS-Toolkit Need a config file for it to work"

read -p " Run Config? (yes/no)?" CONT
if [ "$CONT" == "yes" ]; then
  echo "Creating config file, please wait...";
sleep 1

#id=1; You can use server ID if you like.

# Server 1
read -p " Whats the Server1 Hostname or IP?   :" server1;
read -p " Whats the Server1 Username?   :" username1;
read -p " Write the full dir to list (/etc/fail2ban/blacklist)   :" blocklist1;

# Server 2
read -p " Whats the Server2 Hostname or IP?   :" server2;
read -p " Whats the Server2 Username?   :" username2;
read -p " Write the full dir to list (/etc/fail2ban/blacklist)   :" blocklist2;
#read -p " Optional Directory on server2   :" opdir2;

# Mysql
read -p " Whats the Mysql's Hostname?   :" mysqlsrv;
read -p " What is the username for Mysql?   :" mysqluser;
read -p " Tell Mysql where to store backups of the database   :" backupdir;
echo "Good job!, Now give us a seck while we build the config and send you of to the toolbox"
sleep 3

#printf '# This is the configuration file for NS-Toolkit. Feel free to edit manually' > config_file
printf '%s\n' "server1${id}=${server1}" "username1${id}=${username1}" "blocklist1${id}=${blocklist1}" '' >> config_file
printf '%s\n' "server2${id}=${server2}" "username2${id}=${username2}" "blocklist2${id}=${blocklist2}" '' >> config_file
printf '%s\n' "mysqlsrv${id}=${mysqlsrv}" "mysqluser${id}=${mysqluser}" "backupdir${id}=${backupdir}" '' >> config_file

echo 'CF="OK"' >> functions
echo "Configuration completed succsessfully! Press [Enter] to continue"; read -r
clear;
mainmen
else
  echo "Press [Enter] to continue to menu"; read -r
clear;
mainmen
fi
}

function reconfig {
	rm /usr/share/NS-Toolkit/config_file
	srvconfig
}

function kitupdate {
	echo "Upating NS-Toolkit, please wait..."
	git clone https://github.com/nordsec/NS-Toolkit.git /tmp/nstmp

	rm /usr/share/NS-Toolkit/README.md
	rm /usr/share/NS-Toolkit/NS-Toolkit.sh
	rm /usr/share/NS-Toolkit/LICENSE
	rm /usr/share/NS-Toolkit/functions
	rm /usr/share/NS-Toolkit/setup.sh
	rm /usr/share/NS-Toolkit/uninstall.sh

	cp /tmp/nstmp/* /usr/share/NS-Toolkit/
	chmod +x /usr/share/NS-Toolkit/NS-Toolkit.sh
	chmod +x /usr/share/NS-Toolkit/uninstall.sh
	chmod +x /usr/share/NS-Toolkit/setup.sh
	echo "Dishwashing /tmp/"
	rm -rf /tmp/nstmp
	echo "Update success!"
	mainmen
}

function nsinst {
	cd /usr/share/
	echo -n "Downloading Toolbox,"; sleep 1; echo " Adding a Hammer,"; sleep 1; echo "screw driver and a cat?"
	git clone https://github.com/nordsec/NS-Toolkit.git
	cd NS-Toolkit/
	chmod +x NS-Toolkit.sh
	chmod +x uninstall.sh	

	echo "Creating shortcut"

	echo -e '#!/bin/bash' > /usr/bin/nstoolkit
	echo -e 'cd /usr/share/NS-Toolkit && ./NS-Toolkit.sh' >> /usr/bin/nstoolkit
	chmod +x /usr/bin/nstoolkit
	
	echo 'TOS="OK"' >> functions
	clear
	echo "found a blue cat, rm removed it, no worries"
	sleep 3
	clear
	echo "Setup Finished seccessfully! Running config"
	sleep 2
	srvconfig

}

function fsync {
	echo "Synching Firewalls Now"
	read -r -p "Are both lists stored on remote servers? (yes/no)" sans
	if [ "$sans" = "yes" ]; then
	scp "$username1@$server1:$blocklist1" "$username2@$server2:/tmp/blacklist1"
	ssh "$username1@$server1" bash < <(
        printf "rm "$blocklist1"\n"
	printf "exit\n"
)
	echo "Blacklist Seccessfully Sent to server 2"
else
  echo "Copying blacklist from local dir"
	scp -3 "$blocklist1" "$username2@$server2:/tmp/blacklist1"
fi

ssh "$username2@$server2" bash < <(
  printf "mv "$blocklist2" /tmp/blacklist2\n"
  printf "awk '!a[\$0]++' /tmp/blacklist1 /tmp/blacklist2 > %q\n" "$blocklist2"
  printf "rm /tmp/*\n"
  printf "exit\n"
)
  echo "Merged and cleaned, moving list back to server 1"
  scp -3 "$username2@$server2:$blocklist2" "$username1@$server1:$blocklist1"
  echo "Firewall-Sync Completed Successfully"
	read -r -p "Press [Enter] To continue"
mainmen
}

function mysqlbackup {
	mysqldump --user=$mysqluser -p --host=$mysqlsrv --all-databases > $backupdir"dump-$( date '+%Y-%m-%d_%H-%M-%S' ).sql"
}
